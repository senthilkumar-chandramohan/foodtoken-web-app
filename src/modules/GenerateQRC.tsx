import { useRef, useEffect } from 'react';
import QRCode from 'react-qr-code';
import { useScreenshot } from 'use-react-screenshot';

function ShareButtons({ message, url }) {
    const shareViaWhatsApp = () => {
      window.open(`whatsapp://send?text=${encodeURIComponent(message)}&â€Œurl=${encodeURIComponent(url)}`);
    };
  
    return (
      <div>
        <button className="icon whatsapp" onClick={shareViaWhatsApp}>Share QR Code</button>
      </div>
    );
}

const GenerateQRC = ({ sellerName, userId, amount = '' }) => {
    const ref = useRef(null);
    const [image, takeScreenshot] = useScreenshot();
    const getImage = () => takeScreenshot(ref.current);

    const payload = JSON.stringify({
        sellerName,
        userId,
        amount,
    });

    console.log(payload);

    function shareBase64Image(base64Data: string, imageName: string) {
        // Convert base64 to Blob
        const byteCharacters = atob(base64Data);
        const byteArrays: Uint8Array[] = [];
        for (let offset = 0; offset < byteCharacters.length; offset += 512) {
          const slice = byteCharacters.slice(offset, offset + 512);
          const byteNumbers = new Array(slice.length);
          for (let i = 0; i < slice.length; i++) {
            byteNumbers[i] = slice.charCodeAt(i);
          }
          const byteArray = new Uint8Array(byteNumbers);
          byteArrays.push(byteArray);
        }
        const blob = new Blob(byteArrays, { type: 'image/png' }); // Adjust type as needed
      
        // Share
        navigator.share({
          files: [new File([blob], imageName, { type: 'image/png' })],
        })
        .then(() => console.log('Shared successfully'))
        .catch((error) => console.error('Share failed:', error));
      }
      

    const nativeShare = () => {
//        console.log(image);
//data:image/png;base64,
        const image1 = "";
        shareBase64Image(image1, 'image.png');
    }

    useEffect(() => {
        getImage();
    });

    return (
        <>
            <div className='center'>
                <h4>QR Code for</h4>
                <h2 className='highlight'>{sellerName}</h2>
                {
                    amount && (<><h4>to receive an amount of</h4><h2 className="highlight token-logo">${amount}</h2></>)
                }

                <div ref={ref} style={{ margin: '30px 0', background: 'white', padding: '15px' }}>
                    <QRCode value={payload} />
                </div>

                {
                    image && 
                    <ShareButtons message={`Pay ${sellerName} using this QR Code`} url={image} />
                }

                <br /><br />
                <button onClick={nativeShare}>Share</button>
            </div>
        </>
    )
};

export default GenerateQRC;
